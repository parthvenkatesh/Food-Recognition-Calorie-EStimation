{"ast":null,"code":"import isTypedArray from 'lodash/isTypedArray';\nimport reverse from 'lodash/reverse';\nimport sortBy from 'lodash/sortBy';\nimport take from 'lodash/take';\nimport { food101Classes } from './food101';\nexport function food101topK(classProbabilities, k = 5) {\n  const probs = isTypedArray(classProbabilities) ? Array.prototype.slice.call(classProbabilities) : classProbabilities;\n  const sorted = reverse(sortBy(probs.map((prob, index) => [prob, index]), probIndex => probIndex[0]));\n  const topK = take(sorted, k).map(probIndex => {\n    const iClass = food101Classes[probIndex[1]];\n    return {\n      id: probIndex[1],\n      name: iClass.replace(/_/, ' '),\n      probability: probIndex[0]\n    };\n  });\n  return topK;\n}\n;\nexport function con(val) {\n  const values = {\n    \"baby back_ribs\": 296,\n    baklava: 248,\n    \"beef carpaccio\": 230,\n    \"beef tartare\": 240,\n    \"beet salad\": 470,\n    beignets: 82.5,\n    bibimbap: 527,\n    \"bread pudding\": 320,\n    \"breakfast burrito\": 306,\n    bruschetta: 305,\n    \"caesar salad\": 52,\n    cannoli: 44,\n    \"caprese salad\": 240,\n    \"carrot cake\": 250,\n    ceviche: 415,\n    cheesecake: 173,\n    \"cheese plate\": 321,\n    \"chicken curry\": 615,\n    \"chicken quesadilla\": 110,\n    \"chicken wings\": 293,\n    \"chocolate cake\": 81,\n    \"chocolate mousse\": 371,\n    churros: 225,\n    \"clam chowder\": 170,\n    \"club sandwich\": 56,\n    \"crab cakes\": 220,\n    \"creme brulee\": 266,\n    \"croque madame\": 150,\n    \"cup cakes\": 56,\n    \"deviled eggs\": 305,\n    donuts: 200,\n    dumplings: 452,\n    edamame: 41,\n    \"eggs benedict\": 122,\n    escargots: 553,\n    falafel: 90,\n    \"filet mignon\": 333,\n    \"fish and_chips\": 267,\n    \"foie gras\": 842,\n    \"french fries\": 462,\n    \"french onion_soup\": 312,\n    \"french toast\": 23,\n    \"fried calamari\": 229,\n    \"fried rice\": 172,\n    \"frozen yogurt\": 163,\n    \"garlic bread\": 159,\n    gnocchi: 350,\n    \"greek salad\": 250,\n    \"grilled cheese_sandwich\": 110,\n    \"grilled salmon\": 497,\n    guacamole: 175,\n    gyoza: 155,\n    hamburger: 48,\n    \"hot and_sour_soup\": 295,\n    \"hot dog\": 39,\n    \"huevos rancheros\": 290,\n    hummus: 258,\n    \"ice cream\": 166,\n    lasagna: 207,\n    \"lobster bisque\": 135,\n    \"lobster roll_sandwich\": 50,\n    \"macaroni and_cheese\": 436,\n    macarons: 500,\n    \"miso soup\": 85,\n    mussels: 35,\n    nachos: 10,\n    omelette: 230,\n    \"onion rings\": 188,\n    oysters: 276,\n    \"pad thai\": 43,\n    paella: 1100,\n    pancakes: 379,\n    \"panna cotta\": 90,\n    \"peking duck\": 507,\n    pho: 1284,\n    pizza: 300,\n    \"pork chop\": 250,\n    poutine: 118,\n    \"prime rib\": 1422,\n    \"pulled pork_sandwich\": 300,\n    ramen: 322,\n    ravioli: 400,\n    \"red velvet_cake\": 355,\n    risotto: 293,\n    samosa: 174,\n    sashimi: 116,\n    scallops: 41,\n    \"seaweed salad\": 111,\n    \"shrimp and_grits\": 74,\n    \"spaghetti bolognese\": 83,\n    \"spaghetti carbonara\": 260,\n    \"spring rolls\": 350,\n    steak: 60,\n    \"strawberry shortcake\": 125,\n    sushi: 164.3,\n    tacos: 223,\n    takoyaki: 70,\n    tiramisu: 79,\n    \"tuna tartare\": 492,\n    waffles: 125\n  };\n  return values[val] + \" calories\";\n}","map":{"version":3,"sources":["/home/parth/Documents/Food-Detect/src/utils.js"],"names":["isTypedArray","reverse","sortBy","take","food101Classes","food101topK","classProbabilities","k","probs","Array","prototype","slice","call","sorted","map","prob","index","probIndex","topK","iClass","id","name","replace","probability","con","val","values","baklava","beignets","bibimbap","bruschetta","cannoli","ceviche","cheesecake","churros","donuts","dumplings","edamame","escargots","falafel","gnocchi","guacamole","gyoza","hamburger","hummus","lasagna","macarons","mussels","nachos","omelette","oysters","paella","pancakes","pho","pizza","poutine","ramen","ravioli","risotto","samosa","sashimi","scallops","steak","sushi","tacos","takoyaki","tiramisu","waffles"],"mappings":"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","sourcesContent":["\r\nimport isTypedArray from 'lodash/isTypedArray';\r\nimport reverse from 'lodash/reverse';\r\nimport sortBy from 'lodash/sortBy';\r\nimport take from 'lodash/take';\r\nimport { food101Classes } from './food101';\r\n\r\nexport function food101topK(classProbabilities, k = 5) {\r\n  const probs = isTypedArray(classProbabilities)\r\n    ? Array.prototype.slice.call(classProbabilities)\r\n    : classProbabilities;\r\n\r\n  const sorted = reverse(\r\n    sortBy(\r\n      probs.map((prob, index) => [ prob, index ]),\r\n      probIndex => probIndex[0]\r\n    )\r\n  );\r\n\r\n  const topK = take(sorted, k).map(probIndex => {\r\n    const iClass = food101Classes[probIndex[1]];\r\n    return {\r\n      id: probIndex[1],\r\n      name: iClass.replace(/_/, ' '),\r\n      probability: probIndex[0]\r\n    };\r\n  });\r\n  return topK;\r\n};\r\n\r\nexport function con(val){\r\n\tconst values = {\"baby back_ribs\" : 296 , \r\nbaklava : 248 , \r\n\"beef carpaccio\" : 230 , \r\n\"beef tartare\" : 240 , \r\n\"beet salad\" : 470 , \r\nbeignets : 82.5 , \r\nbibimbap : 527 , \r\n\"bread pudding\" : 320 , \r\n\"breakfast burrito\" : 306 , \r\nbruschetta : 305 , \r\n\"caesar salad\" : 52 , \r\ncannoli : 44 , \r\n\"caprese salad\" : 240 , \r\n\"carrot cake\" : 250 , \r\nceviche : 415 , \r\ncheesecake : 173 , \r\n\"cheese plate\" : 321 , \r\n\"chicken curry\" : 615 , \r\n\"chicken quesadilla\" : 110 , \r\n\"chicken wings\" : 293 , \r\n\"chocolate cake\" : 81 , \r\n\"chocolate mousse\" : 371 , \r\nchurros : 225 , \r\n\"clam chowder\" : 170 , \r\n\"club sandwich\" : 56 , \r\n\"crab cakes\" : 220 , \r\n\"creme brulee\" : 266 , \r\n\"croque madame\" : 150 , \r\n\"cup cakes\" : 56 , \r\n\"deviled eggs\" : 305 , \r\ndonuts : 200 , \r\ndumplings : 452 , \r\nedamame : 41 , \r\n\"eggs benedict\" : 122 , \r\nescargots : 553 , \r\nfalafel : 90 , \r\n\"filet mignon\" : 333 , \r\n\"fish and_chips\" : 267 , \r\n\"foie gras\" : 842 , \r\n\"french fries\" : 462 , \r\n\"french onion_soup\" : 312 , \r\n\"french toast\" : 23 , \r\n\"fried calamari\" : 229 , \r\n\"fried rice\" : 172 , \r\n\"frozen yogurt\" : 163 , \r\n\"garlic bread\" : 159 , \r\ngnocchi : 350 , \r\n\"greek salad\" : 250 , \r\n\"grilled cheese_sandwich\" : 110 , \r\n\"grilled salmon\" : 497 , \r\nguacamole : 175 , \r\ngyoza : 155 , \r\nhamburger : 48 , \r\n\"hot and_sour_soup\" : 295 , \r\n\"hot dog\" : 39 , \r\n\"huevos rancheros\" : 290 , \r\nhummus : 258 , \r\n\"ice cream\" : 166 , \r\nlasagna : 207 , \r\n\"lobster bisque\" : 135 , \r\n\"lobster roll_sandwich\" : 50 , \r\n\"macaroni and_cheese\" : 436 , \r\nmacarons : 500 , \r\n\"miso soup\" : 85 , \r\nmussels : 35 , \r\nnachos : 10 , \r\nomelette : 230 , \r\n\"onion rings\" : 188 , \r\noysters : 276 , \r\n\"pad thai\" : 43 , \r\npaella : 1100 , \r\npancakes : 379 , \r\n\"panna cotta\" : 90 , \r\n\"peking duck\" : 507 , \r\npho : 1284 , \r\npizza : 300 , \r\n\"pork chop\" : 250 , \r\npoutine : 118 , \r\n\"prime rib\" : 1422 , \r\n\"pulled pork_sandwich\" : 300 , \r\nramen : 322 , \r\nravioli : 400 , \r\n\"red velvet_cake\" : 355 , \r\nrisotto : 293 , \r\nsamosa : 174 , \r\nsashimi : 116 , \r\nscallops : 41 , \r\n\"seaweed salad\" : 111 , \r\n\"shrimp and_grits\" : 74 , \r\n\"spaghetti bolognese\" : 83 , \r\n\"spaghetti carbonara\" : 260 , \r\n\"spring rolls\" : 350 , \r\nsteak : 60 , \r\n\"strawberry shortcake\" : 125 , \r\nsushi : 164.3 , \r\ntacos : 223 , \r\ntakoyaki : 70 , \r\ntiramisu : 79 , \r\n\"tuna tartare\" : 492 , \r\nwaffles : 125\r\n\r\n}\r\n\treturn values[val]+\" calories\";  \r\n}\r\n"]},"metadata":{},"sourceType":"module"}